#!/usr/bin/php -q
<?php
/***************************************************************************
* copyright            : (C) 2001-2011 Advanced Internet Designs Inc.
* email                : forum@prohost.org
* $Id$
*
* This program is free software; you can redistribute it and/or modify it 
* under the terms of the GNU General Public License as published by the 
* Free Software Foundation; version 2 of the License, or 
* (at your option) any later version.
***************************************************************************/

/** Create an archive of all files requred to install or upgrade a forum. */
function create_file_archive($dir, $compress)
{
	$dirs = array(realpath($dir));
	$base = dirname($dirs[0]);
	$data = '';

	while (list(,$v) = each($dirs)) {
		if (!($d = opendir($v))) {
			seterr('Cannot access ['. $path .'].');
		}

		$dd = str_replace($base, '', $v);
		if ($dd && ($dd{0} == '/' || $dd{0} == '\\')) {
			$dd = substr($dd, 1);
		}

		while (($f = readdir($d))) {
			if ($f == '.' || $f == '..' || $f == 'CVS' || $f == '.svn') continue;

			if (is_file($v .'/'. $f)) {
				$fdata = file_get_contents($v .'/'. $f);
				if ($f == 'lib.js') {
				 	// Crude JavaScript compression.
					$multiline_comment = '/\/\*(?!-)[\x00-\xff]*?\*\//';
					$fdata = preg_replace($multiline_comment, '', $fdata);
					$singleline_comment = '/[^:]\/\/.*/';
					$fdata = preg_replace($singleline_comment, '', $fdata);
					$extra_space = '/\s+/';
					// $fdata = preg_replace($extra_space, ' ', $fdata);
					$removable_space = '/\s?([\{\};\=\(\)\/\+\*-])\s?/';
					$fdata = preg_replace($removable_space, "\\1", $fdata);
					$empty_lines = '/^\n+|^[\t\s]*\n+/m';
					$fdata = str_replace($empty_lines, '', $fdata);
  				}
				$data .= '//'. $f .'//0600//'. $dd .'//'. md5($fdata) .'//'. strlen($fdata) ."//\n". $fdata ."\n";
			} else {
				$data .= '//'. $f .'//0700//'. $dd ."//\n";
				$dirs[] = $v .'/'. $f;
			}
		}
		closedir($d);
	}

	$check_sum = md5($data);

	$clean = array('<?' => 'PHP_OPEN_TAG', '<%' => 'PHP_OPEN_ASP_TAG');

	if( $compress ){
		$a_len = str_pad(strlen($data), 10, '0', STR_PAD_LEFT);
		$data = $check_sum . $a_len . strtr(gzcompress($data, 9), $clean);
	} else {
		$clean['<?'] = 'RAW_PHP_OPEN_TAG';
		$data = $check_sum . strtr($data, $clean);
	}

	return $data;
}

/** Print error message and exit. */
function seterr($msg)
{
	fwrite(STDERR, $msg ."\n"); 
	exit;
}

/* main */
error_reporting(E_ALL);
@ini_set('display_errors', 1);
@ini_set('memory_limit', '128M');	// PHP 5.3's default, old defaults too small.
@set_magic_quotes_runtime(0);		// Depricated in PHP 5.3.

if( !defined('STDERR' ) ){
	define('STDERR', fopen('php://stderr', 'wb'));
}

if( !defined('argc') ){
	$argc = $_SERVER['argc'];
}

$dir = FALSE;
$filename = FALSE;
$compress = FALSE;

if( $argc == 1 ) {
	seterr("No arguments.\n\tSyntax: create_file_archive directory_name [archive_name] [use compression]\n\tIf no archive_name is specified the archive is echoed");
} 
if ( $argc >= 2 ) {
	$dir = preg_replace('!/+$!', '', $_SERVER['argv'][1]);
	if( !@is_dir($dir) ) {
		seterr('ERROR: ['. $_SERVER['argv'][1] ."] is not a valid valid directory.\nPlease specify a valid directory to package.");
	}
} 
if( $argc >= 3 ) {
	$filename = $_SERVER['argv'][2];
}
if( $argc >= 4 ) {
	$compress = $_SERVER['argv'][3];
	if( !( strcasecmp($compress, "1") || 
		   strcasecmp($compress,"true")  || 
		   strcasecmp($compress,"yes") ) ) {
		$compress = TRUE;
	}

	if( $compress && !extension_loaded('zlib') )	{
		seterr('The zlib extension that is required to compress the archive is not installed. Please install it or restart without compression.');
	}
}

$archive = create_file_archive($dir, $compress);

if( !$filename ){
	echo $archive;
} else {
	$ok = file_put_contents( $filename, $archive );
	if( $ok === FALSE ) seterr( "Error while writing to file $$filename.");
}

?>
